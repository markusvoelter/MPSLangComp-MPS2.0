package entities.sandbox.sandbox;

/*Generated by MPS */


public class Employee {
  private int id;
  private String name;
  private String role;
  private Department worksAt;
  private boolean freelancer;

  public Employee() {
  }

  public void setId(int newValue) {
    // check permissions (from rbac_entities) 
    if (new RbacSpecEntities().currentUserHasWritePermission("Department.id")) {
      throw new RuntimeException("no permission");
    }
    this.id = newValue;
  }

  public void setName(String newValue) {
    // check permissions (from rbac_entities) 
    if (new RbacSpecEntities().currentUserHasWritePermission("Employee.name")) {
      throw new RuntimeException("no permission");
    }
    this.name = newValue;
  }

  public void setRole(String newValue) {
    // check permissions (from rbac_entities) 
    if (new RbacSpecEntities().currentUserHasWritePermission("Employee.role")) {
      throw new RuntimeException("no permission");
    }
    this.role = newValue;
  }

  public void setWorksAt(Department newValue) {
    // check permissions (from rbac_entities) 
    if (new RbacSpecEntities().currentUserHasWritePermission("Employee.worksAt")) {
      throw new RuntimeException("no permission");
    }
    this.worksAt = newValue;
  }

  public void setFreelancer(boolean newValue) {
    // check permissions (from rbac_entities) 
    if (new RbacSpecEntities().currentUserHasWritePermission("Employee.freelancer")) {
      throw new RuntimeException("no permission");
    }
    this.freelancer = newValue;
  }

  public int getId() {
    return id;
  }

  public String getName() {
    return name;
  }

  public String getRole() {
    return role;
  }

  public Department getWorksAt() {
    return worksAt;
  }

  public boolean getFreelancer() {
    return freelancer;
  }

  public String toString() {
    StringBuilder bf = new StringBuilder();
    bf.append("Employee" + "\n");
    bf.append("  " + "id" + ":" + getId() + "\n");
    bf.append("  " + "name" + ":" + getName() + "\n");
    bf.append("  " + "role" + ":" + getRole() + "\n");
    bf.append("  " + "worksAt" + ":" + getWorksAt() + "\n");
    bf.append("  " + "freelancer" + ":" + getFreelancer() + "\n");
    return bf.toString();
  }
}
