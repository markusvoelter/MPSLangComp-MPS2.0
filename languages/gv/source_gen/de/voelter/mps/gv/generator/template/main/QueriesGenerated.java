package de.voelter.mps.gv.generator.template.main;

/*Generated by MPS */

import org.apache.commons.logging.Log;
import org.apache.commons.logging.LogFactory;
import jetbrains.mps.smodel.IOperationContext;
import jetbrains.mps.generator.template.BaseMappingRuleContext;
import jetbrains.mps.lang.smodel.generator.smodelAdapter.SLinkOperations;
import jetbrains.mps.smodel.AttributesRolesUtil;
import jetbrains.mps.generator.template.PropertyMacroContext;
import jetbrains.mps.lang.smodel.generator.smodelAdapter.SPropertyOperations;
import jetbrains.mps.smodel.SNode;
import jetbrains.mps.lang.smodel.generator.smodelAdapter.SNodeOperations;
import jetbrains.mps.generator.template.IfMacroContext;
import jetbrains.mps.lang.smodel.generator.smodelAdapter.SConceptPropertyOperations;
import jetbrains.mps.internal.collections.runtime.ListSequence;
import jetbrains.mps.internal.collections.runtime.IWhereFilter;
import jetbrains.mps.generator.template.SourceSubstituteMacroNodesContext;
import jetbrains.mps.lang.smodel.generator.smodelAdapter.SModelOperations;
import java.util.List;
import java.util.ArrayList;

public class QueriesGenerated {
  protected static Log log = LogFactory.getLog(QueriesGenerated.class);

  public static boolean baseMappingRule_Condition_1184135985877028853(final IOperationContext operationContext, final BaseMappingRuleContext _context) {
    if (log.isErrorEnabled()) {
      log.error("XXXX");
    }
    return SLinkOperations.getTarget(_context.getNode(), AttributesRolesUtil.childRoleFromAttributeRole("annotationDiagram"), true) != null;
  }

  public static Object propertyMacro_GetPropertyValue_1184135985877030373(final IOperationContext operationContext, final PropertyMacroContext _context) {
    if (log.isErrorEnabled()) {
      log.error("writing dot file to " + SPropertyOperations.getString(SLinkOperations.getTarget(_context.getNode(), AttributesRolesUtil.childRoleFromAttributeRole("annotationDiagram"), true), "path"));
    }
    _context.putSessionObject("annotation", SLinkOperations.getTarget(_context.getNode(), AttributesRolesUtil.childRoleFromAttributeRole("annotationDiagram"), true));
    return SPropertyOperations.getString(SLinkOperations.getTarget(_context.getNode(), AttributesRolesUtil.childRoleFromAttributeRole("annotationDiagram"), true), "path");
  }

  public static Object propertyMacro_GetPropertyValue_8281282103316083067(final IOperationContext operationContext, final PropertyMacroContext _context) {
    return "ranksep=" + SPropertyOperations.getString(((SNode) _context.getSessionObject("annotation")), "sep");
  }

  public static Object propertyMacro_GetPropertyValue_1184135985877081598(final IOperationContext operationContext, final PropertyMacroContext _context) {
    return SPropertyOperations.getString(_context.getNode(), "name");
  }

  public static Object propertyMacro_GetPropertyValue_1184135985877090693(final IOperationContext operationContext, final PropertyMacroContext _context) {
    return SPropertyOperations.getString(_context.getNode(), "name");
  }

  public static Object propertyMacro_GetPropertyValue_1184135985877090719(final IOperationContext operationContext, final PropertyMacroContext _context) {
    return ((SNodeOperations.getIndexInParent(_context.getNode()) != 0 ?
      "\\n" :
      ""
    )) + SPropertyOperations.getString(_context.getNode(), "name");
  }

  public static Object propertyMacro_GetPropertyValue_1184135985877104015(final IOperationContext operationContext, final PropertyMacroContext _context) {
    return SPropertyOperations.getString(SLinkOperations.getTarget(_context.getNode(), "extends", false), "name");
  }

  public static Object propertyMacro_GetPropertyValue_1184135985877104026(final IOperationContext operationContext, final PropertyMacroContext _context) {
    return SPropertyOperations.getString(_context.getNode(), "name");
  }

  public static Object propertyMacro_GetPropertyValue_1184135985877113038(final IOperationContext operationContext, final PropertyMacroContext _context) {
    return SPropertyOperations.getString(SNodeOperations.cast(SNodeOperations.getParent(_context.getNode()), "jetbrains.mps.lang.structure.structure.ConceptDeclaration"), "name");
  }

  public static Object propertyMacro_GetPropertyValue_1184135985877113047(final IOperationContext operationContext, final PropertyMacroContext _context) {
    return SPropertyOperations.getString(SLinkOperations.getTarget(_context.getNode(), "target", false), "name");
  }

  public static Object propertyMacro_GetPropertyValue_1184135985877122680(final IOperationContext operationContext, final PropertyMacroContext _context) {
    return "label=\" " + SPropertyOperations.getString(_context.getNode(), "role") + " " + (SPropertyOperations.getString_def(_context.getNode(), "sourceCardinality", "0..1")) + "\"";
  }

  public static Object propertyMacro_GetPropertyValue_1184135985877131493(final IOperationContext operationContext, final PropertyMacroContext _context) {
    return SPropertyOperations.getString(SNodeOperations.cast(SNodeOperations.getParent(_context.getNode()), "jetbrains.mps.lang.structure.structure.ConceptDeclaration"), "name");
  }

  public static Object propertyMacro_GetPropertyValue_1184135985877131505(final IOperationContext operationContext, final PropertyMacroContext _context) {
    return SPropertyOperations.getString(SLinkOperations.getTarget(_context.getNode(), "target", false), "name");
  }

  public static Object propertyMacro_GetPropertyValue_1184135985877131519(final IOperationContext operationContext, final PropertyMacroContext _context) {
    return "label=\" " + SPropertyOperations.getString(_context.getNode(), "role") + " " + (SPropertyOperations.getString_def(_context.getNode(), "sourceCardinality", "0..1")) + "\"";
  }

  public static Object propertyMacro_GetPropertyValue_8281282103315983217(final IOperationContext operationContext, final PropertyMacroContext _context) {
    return SPropertyOperations.getString_def(_context.getNode(), "rank", "same");
  }

  public static Object propertyMacro_GetPropertyValue_8281282103315984299(final IOperationContext operationContext, final PropertyMacroContext _context) {
    return SPropertyOperations.getString(SLinkOperations.getTarget(_context.getNode(), "concept", false), "name");
  }

  public static boolean ifMacro_Condition_1184135985877278426(final IOperationContext operationContext, final IfMacroContext _context) {
    return SPropertyOperations.getBoolean(SLinkOperations.getTarget(_context.getNode(), AttributesRolesUtil.childRoleFromAttributeRole("annotationDiagram"), true), "lr");
  }

  public static boolean ifMacro_Condition_8281282103316051141(final IOperationContext operationContext, final IfMacroContext _context) {
    return !(SPropertyOperations.getBoolean(((SNode) _context.getSessionObject("annotation")), "lr"));
  }

  public static boolean ifMacro_Condition_1184135985877150584(final IOperationContext operationContext, final IfMacroContext _context) {
    return SConceptPropertyOperations.getBoolean(_context.getNode(), "abstract");
  }

  public static boolean ifMacro_Condition_1184135985877099509(final IOperationContext operationContext, final IfMacroContext _context) {
    return ListSequence.fromList(SLinkOperations.getTargets(_context.getNode(), "implements", true)).where(new IWhereFilter<SNode>() {
      public boolean accept(SNode it) {
        return SPropertyOperations.getString(SLinkOperations.getTarget(it, "intfc", false), "name").indexOf("Named") >= 0;
      }
    }).isNotEmpty();
  }

  public static boolean ifMacro_Condition_1184135985877099485(final IOperationContext operationContext, final IfMacroContext _context) {
    return ListSequence.fromList(SLinkOperations.getTargets(_context.getNode(), "propertyDeclaration", true)).isNotEmpty();
  }

  public static boolean ifMacro_Condition_8281282103316051184(final IOperationContext operationContext, final IfMacroContext _context) {
    return !(SPropertyOperations.getBoolean(((SNode) _context.getSessionObject("annotation")), "lr"));
  }

  public static Iterable sourceNodesQuery_1184135985877090703(final IOperationContext operationContext, final SourceSubstituteMacroNodesContext _context) {
    return SLinkOperations.getTargets(_context.getNode(), "propertyDeclaration", true);
  }

  public static Iterable sourceNodesQuery_1184135985877081624(final IOperationContext operationContext, final SourceSubstituteMacroNodesContext _context) {
    return SModelOperations.getRoots(SNodeOperations.getModel(_context.getNode()), "jetbrains.mps.lang.structure.structure.ConceptDeclaration");
  }

  public static Iterable sourceNodesQuery_1184135985877108616(final IOperationContext operationContext, final SourceSubstituteMacroNodesContext _context) {
    return ListSequence.fromList(SModelOperations.getRoots(SNodeOperations.getModel(_context.getNode()), "jetbrains.mps.lang.structure.structure.ConceptDeclaration")).where(new IWhereFilter<SNode>() {
      public boolean accept(SNode it) {
        return SLinkOperations.getTarget(it, "extends", false) != null && !(SPropertyOperations.getString(SLinkOperations.getTarget(it, "extends", false), "name").equals("BaseConcept"));
      }
    });
  }

  public static Iterable sourceNodesQuery_1184135985877113061(final IOperationContext operationContext, final SourceSubstituteMacroNodesContext _context) {
    List<SNode> all = SModelOperations.getRoots(SNodeOperations.getModel(_context.getNode()), "jetbrains.mps.lang.structure.structure.ConceptDeclaration");
    List<SNode> res = new ArrayList<SNode>();
    for (SNode cd : ListSequence.fromList(all)) {
      for (SNode ld : ListSequence.fromList(SLinkOperations.getTargets(cd, "linkDeclaration", true))) {
        if (SPropertyOperations.hasValue(ld, "metaClass", "aggregation", "reference")) {
          ListSequence.fromList(res).addElement(ld);
        }
      }
    }
    return res;
  }

  public static Iterable sourceNodesQuery_1184135985877131531(final IOperationContext operationContext, final SourceSubstituteMacroNodesContext _context) {
    List<SNode> all = SModelOperations.getRoots(SNodeOperations.getModel(_context.getNode()), "jetbrains.mps.lang.structure.structure.ConceptDeclaration");
    List<SNode> res = new ArrayList<SNode>();
    for (SNode cd : ListSequence.fromList(all)) {
      for (SNode ld : ListSequence.fromList(SLinkOperations.getTargets(cd, "linkDeclaration", true))) {
        if (SPropertyOperations.hasValue(ld, "metaClass", "reference", "reference")) {
          ListSequence.fromList(res).addElement(ld);
        }
      }
    }
    return res;
  }

  public static Iterable sourceNodesQuery_8281282103315984291(final IOperationContext operationContext, final SourceSubstituteMacroNodesContext _context) {
    return SLinkOperations.getTargets(_context.getNode(), "refs", true);
  }

  public static Iterable sourceNodesQuery_8281282103315983205(final IOperationContext operationContext, final SourceSubstituteMacroNodesContext _context) {
    return SLinkOperations.getTargets(SLinkOperations.getTarget(_context.getNode(), AttributesRolesUtil.childRoleFromAttributeRole("annotationDiagram"), true), "rankspecs", true);
  }
}
