package de.voelter.mps.gv.structure;

/*Generated by MPS */

import jetbrains.mps.lang.core.structure.BaseConcept;
import jetbrains.mps.smodel.SNode;
import java.util.Iterator;
import java.util.List;
import jetbrains.mps.smodel.SModel;
import jetbrains.mps.smodel.SModelUtil_new;
import jetbrains.mps.project.GlobalScope;

public class DiagramAnnotation extends BaseConcept {
  public static final String concept = "de.voelter.mps.gv.structure.DiagramAnnotation";
  public static final String PATH = "path";
  public static final String SEP = "sep";
  public static final String LR = "lr";
  public static final String RANKSPECS = "rankspecs";

  public DiagramAnnotation(SNode node) {
    super(node);
  }

  public String getPath() {
    return this.getProperty(DiagramAnnotation.PATH);
  }

  public void setPath(String value) {
    this.setProperty(DiagramAnnotation.PATH, value);
  }

  public String getSep() {
    return this.getProperty(DiagramAnnotation.SEP);
  }

  public void setSep(String value) {
    this.setProperty(DiagramAnnotation.SEP, value);
  }

  public boolean getLr() {
    return this.getBooleanProperty(DiagramAnnotation.LR);
  }

  public void setLr(boolean value) {
    this.setBooleanProperty(DiagramAnnotation.LR, value);
  }

  public int getRankspecsesCount() {
    return this.getChildCount(DiagramAnnotation.RANKSPECS);
  }

  public Iterator<RankSpec> rankspecses() {
    return this.children(RankSpec.class, DiagramAnnotation.RANKSPECS);
  }

  public List<RankSpec> getRankspecses() {
    return this.getChildren(RankSpec.class, DiagramAnnotation.RANKSPECS);
  }

  public void addRankspecs(RankSpec node) {
    this.addChild(DiagramAnnotation.RANKSPECS, node);
  }

  public void insertRankspecs(RankSpec prev, RankSpec node) {
    this.insertChild(prev, DiagramAnnotation.RANKSPECS, node);
  }

  public static DiagramAnnotation newInstance(SModel sm, boolean init) {
    return (DiagramAnnotation) SModelUtil_new.instantiateConceptDeclaration("de.voelter.mps.gv.structure.DiagramAnnotation", sm, GlobalScope.getInstance(), init).getAdapter();
  }

  public static DiagramAnnotation newInstance(SModel sm) {
    return DiagramAnnotation.newInstance(sm, false);
  }
}
