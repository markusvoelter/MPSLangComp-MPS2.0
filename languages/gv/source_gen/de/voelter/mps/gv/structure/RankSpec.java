package de.voelter.mps.gv.structure;

/*Generated by MPS */

import jetbrains.mps.lang.core.structure.BaseConcept;
import jetbrains.mps.smodel.SNode;
import java.util.Iterator;
import java.util.List;
import jetbrains.mps.smodel.SModel;
import jetbrains.mps.smodel.SModelUtil_new;
import jetbrains.mps.project.GlobalScope;

public class RankSpec extends BaseConcept {
  public static final String concept = "de.voelter.mps.gv.structure.RankSpec";
  public static final String RANK = "rank";
  public static final String REFS = "refs";

  public RankSpec(SNode node) {
    super(node);
  }

  public RankKind getRank() {
    String value = super.getProperty(RankSpec.RANK);
    return RankKind.parseValue(value);
  }

  public void setRank(RankKind value) {
    super.setProperty(RankSpec.RANK, value.getValueAsString());
  }

  public int getRefsesCount() {
    return this.getChildCount(RankSpec.REFS);
  }

  public Iterator<ConDecRef> refses() {
    return this.children(ConDecRef.class, RankSpec.REFS);
  }

  public List<ConDecRef> getRefses() {
    return this.getChildren(ConDecRef.class, RankSpec.REFS);
  }

  public void addRefs(ConDecRef node) {
    this.addChild(RankSpec.REFS, node);
  }

  public void insertRefs(ConDecRef prev, ConDecRef node) {
    this.insertChild(prev, RankSpec.REFS, node);
  }

  public static RankSpec newInstance(SModel sm, boolean init) {
    return (RankSpec) SModelUtil_new.instantiateConceptDeclaration("de.voelter.mps.gv.structure.RankSpec", sm, GlobalScope.getInstance(), init).getAdapter();
  }

  public static RankSpec newInstance(SModel sm) {
    return RankSpec.newInstance(sm, false);
  }
}
