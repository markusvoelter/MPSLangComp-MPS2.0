package uispec_validation.constraints;

/*Generated by MPS */

import jetbrains.mps.smodel.runtime.base.BaseConstraintsDescriptor;
import jetbrains.mps.smodel.SNodePointer;
import java.util.Map;
import jetbrains.mps.smodel.runtime.ReferenceConstraintsDescriptor;
import java.util.HashMap;
import jetbrains.mps.smodel.runtime.base.BaseReferenceConstraintsDescriptor;
import org.jetbrains.annotations.Nullable;
import jetbrains.mps.smodel.runtime.ReferenceScopeProvider;
import jetbrains.mps.smodel.runtime.base.BaseReferenceScopeProvider;
import jetbrains.mps.smodel.IOperationContext;
import jetbrains.mps.smodel.runtime.ReferencePresentationContext;
import entities.behavior.Attribute_Behavior;
import jetbrains.mps.smodel.runtime.ReferenceConstraintsContext;
import java.util.List;
import jetbrains.mps.smodel.SNode;
import java.util.ArrayList;
import jetbrains.mps.lang.smodel.generator.smodelAdapter.SNodeOperations;
import jetbrains.mps.lang.smodel.generator.smodelAdapter.SLinkOperations;
import jetbrains.mps.internal.collections.runtime.ListSequence;

public class AttributeRefExpr_Constraints extends BaseConstraintsDescriptor {
  private static SNodePointer breakingNode_jdbkc1_a0a3a0a0a1a0b0a1a0 = new SNodePointer("r:2adee6fb-b84e-48e4-a0b4-e178b522a828(uispec_validation.constraints)", "814100379888678045");

  public AttributeRefExpr_Constraints() {
    super("uispec_validation.structure.AttributeRefExpr");
  }

  @Override
  protected Map<String, ReferenceConstraintsDescriptor> getNotDefaultReferences() {
    Map<String, ReferenceConstraintsDescriptor> references = new HashMap();
    references.put("attr", new BaseReferenceConstraintsDescriptor("attr", this) {
      @Override
      public boolean hasOwnScopeProvider() {
        return true;
      }

      @Nullable
      @Override
      public ReferenceScopeProvider getScopeProvider() {
        return new BaseReferenceScopeProvider() {
          @Override
          public boolean hasPresentation() {
            return true;
          }

          @Override
          public String getPresentation(final IOperationContext operationContext, final ReferencePresentationContext _context) {
            return Attribute_Behavior.call_qname_814100379888502468(_context.getParameterNode());
          }

          @Override
          public Object createSearchScopeOrListOfNodes(final IOperationContext operationContext, final ReferenceConstraintsContext _context) {
            List<SNode> res = new ArrayList<SNode>();
            SNode form = SNodeOperations.getAncestor(_context.getEnclosingNode(), "uispec.structure.Form", true, false);
            for (SNode er : SLinkOperations.getTargets(form, "usedEntities", true)) {
              ListSequence.fromList(res).addSequence(ListSequence.fromList(SLinkOperations.getTargets(SLinkOperations.getTarget(er, "entity", false), "attributes", true)));
            }
            return res;
          }

          @Override
          public SNodePointer getSearchScopeValidatorNode() {
            return breakingNode_jdbkc1_a0a3a0a0a1a0b0a1a0;
          }
        };
      }
    });
    return references;
  }
}
