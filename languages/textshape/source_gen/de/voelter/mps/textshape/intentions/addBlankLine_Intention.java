package de.voelter.mps.textshape.intentions;

/*Generated by MPS */

import jetbrains.mps.intentions.BaseIntention;
import jetbrains.mps.intentions.Intention;
import jetbrains.mps.smodel.SNode;
import jetbrains.mps.nodeEditor.EditorContext;
import jetbrains.mps.lang.smodel.generator.smodelAdapter.SLinkOperations;
import jetbrains.mps.smodel.AttributesRolesUtil;
import jetbrains.mps.lang.smodel.generator.smodelAdapter.SNodeOperations;
import jetbrains.mps.smodel.action.SNodeFactoryOperations;

public class addBlankLine_Intention extends BaseIntention implements Intention {
  public addBlankLine_Intention() {
  }

  public String getConcept() {
    return "de.voelter.mps.textshape.structure.IFileContent";
  }

  public boolean isParameterized() {
    return false;
  }

  public boolean isErrorIntention() {
    return false;
  }

  public boolean isAvailableInChildNodes() {
    return true;
  }

  public String getDescription(final SNode node, final EditorContext editorContext) {
    return "toggle blank line before it";
  }

  public void execute(final SNode node, final EditorContext editorContext) {
    if ((SLinkOperations.getTarget(node, AttributesRolesUtil.childRoleFromAttributeRole("blankLineBeforeAnn"), true) != null)) {
      SNodeOperations.deleteNode(SLinkOperations.getTarget(node, AttributesRolesUtil.childRoleFromAttributeRole("blankLineBeforeAnn"), true));
    } else {
      SNodeFactoryOperations.setNewChild(node, AttributesRolesUtil.childRoleFromAttributeRole("blankLineBeforeAnn"), "de.voelter.mps.textshape.structure.NeedsBlankLink");
    }
  }

  public String getLocationString() {
    return "de.voelter.mps.textshape.intentions";
  }
}
