package de.voelter.mps.textshape.structure;

/*Generated by MPS */

import jetbrains.mps.lang.core.structure.BaseConcept;
import jetbrains.mps.lang.core.structure.INamedConcept;
import jetbrains.mps.smodel.SNode;
import java.util.Iterator;
import java.util.List;
import jetbrains.mps.lang.core.structure.Attribute;
import jetbrains.mps.smodel.SModel;
import jetbrains.mps.smodel.SModelUtil_new;
import jetbrains.mps.project.GlobalScope;

public class File extends BaseConcept implements INamedConcept {
  public static final String concept = "de.voelter.mps.textshape.structure.File";
  public static final String EXT = "ext";
  public static final String NAME = "name";
  public static final String SHORT_DESCRIPTION = "shortDescription";
  public static final String ALIAS = "alias";
  public static final String VIRTUAL_PACKAGE = "virtualPackage";
  public static final String CONFIG = "config";
  public static final String CONTENTS = "contents";
  public static final String SMODEL_ATTRIBUTE = "smodelAttribute";

  public File(SNode node) {
    super(node);
  }

  public String getExt() {
    return this.getProperty(File.EXT);
  }

  public void setExt(String value) {
    this.setProperty(File.EXT, value);
  }

  public String getName() {
    return this.getProperty(File.NAME);
  }

  public void setName(String value) {
    this.setProperty(File.NAME, value);
  }

  public String getShortDescription() {
    return this.getProperty(File.SHORT_DESCRIPTION);
  }

  public void setShortDescription(String value) {
    this.setProperty(File.SHORT_DESCRIPTION, value);
  }

  public String getAlias() {
    return this.getProperty(File.ALIAS);
  }

  public void setAlias(String value) {
    this.setProperty(File.ALIAS, value);
  }

  public String getVirtualPackage() {
    return this.getProperty(File.VIRTUAL_PACKAGE);
  }

  public void setVirtualPackage(String value) {
    this.setProperty(File.VIRTUAL_PACKAGE, value);
  }

  public TextShapeConfig getConfig() {
    return (TextShapeConfig) this.getReferent(TextShapeConfig.class, File.CONFIG);
  }

  public void setConfig(TextShapeConfig node) {
    super.setReferent(File.CONFIG, node);
  }

  public int getContentsesCount() {
    return this.getChildCount(File.CONTENTS);
  }

  public Iterator<IFileContent> contentses() {
    return this.children(IFileContent.class, File.CONTENTS);
  }

  public List<IFileContent> getContentses() {
    return this.getChildren(IFileContent.class, File.CONTENTS);
  }

  public void addContents(IFileContent node) {
    this.addChild(File.CONTENTS, node);
  }

  public void insertContents(IFileContent prev, IFileContent node) {
    this.insertChild(prev, File.CONTENTS, node);
  }

  public int getSmodelAttributesCount() {
    return this.getChildCount(File.SMODEL_ATTRIBUTE);
  }

  public Iterator<Attribute> smodelAttributes() {
    return this.children(Attribute.class, File.SMODEL_ATTRIBUTE);
  }

  public List<Attribute> getSmodelAttributes() {
    return this.getChildren(Attribute.class, File.SMODEL_ATTRIBUTE);
  }

  public void addSmodelAttribute(Attribute node) {
    this.addChild(File.SMODEL_ATTRIBUTE, node);
  }

  public void insertSmodelAttribute(Attribute prev, Attribute node) {
    this.insertChild(prev, File.SMODEL_ATTRIBUTE, node);
  }

  public static File newInstance(SModel sm, boolean init) {
    return (File) SModelUtil_new.instantiateConceptDeclaration("de.voelter.mps.textshape.structure.File", sm, GlobalScope.getInstance(), init).getAdapter();
  }

  public static File newInstance(SModel sm) {
    return File.newInstance(sm, false);
  }
}
