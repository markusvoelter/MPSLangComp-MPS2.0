package de.voelter.mps.textshape.structure;

/*Generated by MPS */

import jetbrains.mps.lang.core.structure.BaseConcept;
import jetbrains.mps.lang.core.structure.INamedConcept;
import jetbrains.mps.smodel.SNode;
import java.util.Iterator;
import jetbrains.mps.lang.core.structure.Attribute;
import java.util.List;
import jetbrains.mps.smodel.SModel;
import jetbrains.mps.smodel.SModelUtil_new;
import jetbrains.mps.project.GlobalScope;

public class TextShapeConfig extends BaseConcept implements INamedConcept {
  public static final String concept = "de.voelter.mps.textshape.structure.TextShapeConfig";
  public static final String STATEMENT_DEL = "statementDel";
  public static final String BLOCK_OPENER = "blockOpener";
  public static final String BLOCK_CLOSER = "blockCloser";
  public static final String EXPR_OPENER = "exprOpener";
  public static final String EXPR_CLOSER = "exprCloser";
  public static final String NAME = "name";
  public static final String SHORT_DESCRIPTION = "shortDescription";
  public static final String ALIAS = "alias";
  public static final String VIRTUAL_PACKAGE = "virtualPackage";
  public static final String SMODEL_ATTRIBUTE = "smodelAttribute";

  public TextShapeConfig(SNode node) {
    super(node);
  }

  public String getStatementDel() {
    return this.getProperty(TextShapeConfig.STATEMENT_DEL);
  }

  public void setStatementDel(String value) {
    this.setProperty(TextShapeConfig.STATEMENT_DEL, value);
  }

  public String getBlockOpener() {
    return this.getProperty(TextShapeConfig.BLOCK_OPENER);
  }

  public void setBlockOpener(String value) {
    this.setProperty(TextShapeConfig.BLOCK_OPENER, value);
  }

  public String getBlockCloser() {
    return this.getProperty(TextShapeConfig.BLOCK_CLOSER);
  }

  public void setBlockCloser(String value) {
    this.setProperty(TextShapeConfig.BLOCK_CLOSER, value);
  }

  public String getExprOpener() {
    return this.getProperty(TextShapeConfig.EXPR_OPENER);
  }

  public void setExprOpener(String value) {
    this.setProperty(TextShapeConfig.EXPR_OPENER, value);
  }

  public String getExprCloser() {
    return this.getProperty(TextShapeConfig.EXPR_CLOSER);
  }

  public void setExprCloser(String value) {
    this.setProperty(TextShapeConfig.EXPR_CLOSER, value);
  }

  public String getName() {
    return this.getProperty(TextShapeConfig.NAME);
  }

  public void setName(String value) {
    this.setProperty(TextShapeConfig.NAME, value);
  }

  public String getShortDescription() {
    return this.getProperty(TextShapeConfig.SHORT_DESCRIPTION);
  }

  public void setShortDescription(String value) {
    this.setProperty(TextShapeConfig.SHORT_DESCRIPTION, value);
  }

  public String getAlias() {
    return this.getProperty(TextShapeConfig.ALIAS);
  }

  public void setAlias(String value) {
    this.setProperty(TextShapeConfig.ALIAS, value);
  }

  public String getVirtualPackage() {
    return this.getProperty(TextShapeConfig.VIRTUAL_PACKAGE);
  }

  public void setVirtualPackage(String value) {
    this.setProperty(TextShapeConfig.VIRTUAL_PACKAGE, value);
  }

  public int getSmodelAttributesCount() {
    return this.getChildCount(TextShapeConfig.SMODEL_ATTRIBUTE);
  }

  public Iterator<Attribute> smodelAttributes() {
    return this.children(Attribute.class, TextShapeConfig.SMODEL_ATTRIBUTE);
  }

  public List<Attribute> getSmodelAttributes() {
    return this.getChildren(Attribute.class, TextShapeConfig.SMODEL_ATTRIBUTE);
  }

  public void addSmodelAttribute(Attribute node) {
    this.addChild(TextShapeConfig.SMODEL_ATTRIBUTE, node);
  }

  public void insertSmodelAttribute(Attribute prev, Attribute node) {
    this.insertChild(prev, TextShapeConfig.SMODEL_ATTRIBUTE, node);
  }

  public static TextShapeConfig newInstance(SModel sm, boolean init) {
    return (TextShapeConfig) SModelUtil_new.instantiateConceptDeclaration("de.voelter.mps.textshape.structure.TextShapeConfig", sm, GlobalScope.getInstance(), init).getAdapter();
  }

  public static TextShapeConfig newInstance(SModel sm) {
    return TextShapeConfig.newInstance(sm, false);
  }
}
