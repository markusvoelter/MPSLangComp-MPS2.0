package de.voelter.mps.textshape.editor;

/*Generated by MPS */

import jetbrains.mps.nodeEditor.DefaultNodeEditor;
import jetbrains.mps.nodeEditor.cells.EditorCell;
import jetbrains.mps.nodeEditor.EditorContext;
import jetbrains.mps.smodel.SNode;
import jetbrains.mps.nodeEditor.cells.EditorCell_Collection;
import jetbrains.mps.nodeEditor.style.Style;
import jetbrains.mps.nodeEditor.style.StyleAttributes;
import jetbrains.mps.nodeEditor.cells.EditorCell_Constant;
import jetbrains.mps.nodeEditor.cellProviders.CellProviderWithRole;
import jetbrains.mps.lang.editor.cellProviders.PropertyCellProvider;
import jetbrains.mps.smodel.IOperationContext;
import jetbrains.mps.nodeEditor.EditorManager;

public class TextShapeConfig_Editor extends DefaultNodeEditor {
  public EditorCell createEditorCell(EditorContext editorContext, SNode node) {
    return this.createCollection_2bp9y3_a(editorContext, node);
  }

  private EditorCell createCollection_2bp9y3_a(EditorContext editorContext, SNode node) {
    EditorCell_Collection editorCell = EditorCell_Collection.createVertical(editorContext, node);
    editorCell.setCellId("Collection_2bp9y3_a");
    editorCell.addEditorCell(this.createCollection_2bp9y3_a0(editorContext, node));
    editorCell.addEditorCell(this.createConstant_2bp9y3_b0(editorContext, node));
    editorCell.addEditorCell(this.createCollection_2bp9y3_c0(editorContext, node));
    editorCell.addEditorCell(this.createCollection_2bp9y3_d0(editorContext, node));
    editorCell.addEditorCell(this.createCollection_2bp9y3_e0(editorContext, node));
    editorCell.addEditorCell(this.createCollection_2bp9y3_f0(editorContext, node));
    editorCell.addEditorCell(this.createCollection_2bp9y3_g0(editorContext, node));
    return editorCell;
  }

  private EditorCell createCollection_2bp9y3_a0(EditorContext editorContext, SNode node) {
    EditorCell_Collection editorCell = EditorCell_Collection.createIndent2(editorContext, node);
    editorCell.setCellId("Collection_2bp9y3_a0");
    {
      Style style = editorCell.getStyle();
      style.set(StyleAttributes.SELECTABLE, false);
    }
    editorCell.addEditorCell(this.createConstant_2bp9y3_a0a(editorContext, node));
    editorCell.addEditorCell(this.createProperty_2bp9y3_b0a(editorContext, node));
    return editorCell;
  }

  private EditorCell createCollection_2bp9y3_c0(EditorContext editorContext, SNode node) {
    EditorCell_Collection editorCell = EditorCell_Collection.createIndent2(editorContext, node);
    editorCell.setCellId("Collection_2bp9y3_c0");
    {
      Style style = editorCell.getStyle();
      style.set(StyleAttributes.SELECTABLE, false);
    }
    editorCell.addEditorCell(this.createConstant_2bp9y3_a2a(editorContext, node));
    editorCell.addEditorCell(this.createProperty_2bp9y3_b2a(editorContext, node));
    return editorCell;
  }

  private EditorCell createCollection_2bp9y3_d0(EditorContext editorContext, SNode node) {
    EditorCell_Collection editorCell = EditorCell_Collection.createIndent2(editorContext, node);
    editorCell.setCellId("Collection_2bp9y3_d0");
    {
      Style style = editorCell.getStyle();
      style.set(StyleAttributes.SELECTABLE, false);
    }
    editorCell.addEditorCell(this.createConstant_2bp9y3_a3a(editorContext, node));
    editorCell.addEditorCell(this.createProperty_2bp9y3_b3a(editorContext, node));
    return editorCell;
  }

  private EditorCell createCollection_2bp9y3_e0(EditorContext editorContext, SNode node) {
    EditorCell_Collection editorCell = EditorCell_Collection.createIndent2(editorContext, node);
    editorCell.setCellId("Collection_2bp9y3_e0");
    {
      Style style = editorCell.getStyle();
      style.set(StyleAttributes.SELECTABLE, false);
    }
    editorCell.addEditorCell(this.createConstant_2bp9y3_a4a(editorContext, node));
    editorCell.addEditorCell(this.createProperty_2bp9y3_b4a(editorContext, node));
    return editorCell;
  }

  private EditorCell createCollection_2bp9y3_f0(EditorContext editorContext, SNode node) {
    EditorCell_Collection editorCell = EditorCell_Collection.createIndent2(editorContext, node);
    editorCell.setCellId("Collection_2bp9y3_f0");
    {
      Style style = editorCell.getStyle();
      style.set(StyleAttributes.SELECTABLE, false);
    }
    editorCell.addEditorCell(this.createConstant_2bp9y3_a5a(editorContext, node));
    editorCell.addEditorCell(this.createProperty_2bp9y3_b5a(editorContext, node));
    return editorCell;
  }

  private EditorCell createCollection_2bp9y3_g0(EditorContext editorContext, SNode node) {
    EditorCell_Collection editorCell = EditorCell_Collection.createIndent2(editorContext, node);
    editorCell.setCellId("Collection_2bp9y3_g0");
    {
      Style style = editorCell.getStyle();
      style.set(StyleAttributes.SELECTABLE, false);
    }
    editorCell.addEditorCell(this.createConstant_2bp9y3_a6a(editorContext, node));
    editorCell.addEditorCell(this.createProperty_2bp9y3_b6a(editorContext, node));
    return editorCell;
  }

  private EditorCell createConstant_2bp9y3_a0a(EditorContext editorContext, SNode node) {
    EditorCell_Constant editorCell = new EditorCell_Constant(editorContext, node, "config");
    editorCell.setCellId("Constant_2bp9y3_a0a");
    editorCell.setDefaultText("");
    return editorCell;
  }

  private EditorCell createConstant_2bp9y3_b0(EditorContext editorContext, SNode node) {
    EditorCell_Constant editorCell = new EditorCell_Constant(editorContext, node, "---------------------------------------------------------------");
    editorCell.setCellId("Constant_2bp9y3_b0");
    editorCell.setDefaultText("");
    return editorCell;
  }

  private EditorCell createConstant_2bp9y3_a2a(EditorContext editorContext, SNode node) {
    EditorCell_Constant editorCell = new EditorCell_Constant(editorContext, node, "statement delimiter");
    editorCell.setCellId("Constant_2bp9y3_a2a");
    editorCell.setDefaultText("");
    return editorCell;
  }

  private EditorCell createConstant_2bp9y3_a3a(EditorContext editorContext, SNode node) {
    EditorCell_Constant editorCell = new EditorCell_Constant(editorContext, node, "block opener");
    editorCell.setCellId("Constant_2bp9y3_a3a");
    editorCell.setDefaultText("");
    return editorCell;
  }

  private EditorCell createConstant_2bp9y3_a4a(EditorContext editorContext, SNode node) {
    EditorCell_Constant editorCell = new EditorCell_Constant(editorContext, node, "block closer");
    editorCell.setCellId("Constant_2bp9y3_a4a");
    editorCell.setDefaultText("");
    return editorCell;
  }

  private EditorCell createConstant_2bp9y3_a5a(EditorContext editorContext, SNode node) {
    EditorCell_Constant editorCell = new EditorCell_Constant(editorContext, node, "expr opener");
    editorCell.setCellId("Constant_2bp9y3_a5a");
    editorCell.setDefaultText("");
    return editorCell;
  }

  private EditorCell createConstant_2bp9y3_a6a(EditorContext editorContext, SNode node) {
    EditorCell_Constant editorCell = new EditorCell_Constant(editorContext, node, "expr closer");
    editorCell.setCellId("Constant_2bp9y3_a6a");
    editorCell.setDefaultText("");
    return editorCell;
  }

  private EditorCell createProperty_2bp9y3_b0a(EditorContext editorContext, SNode node) {
    CellProviderWithRole provider = new PropertyCellProvider(node, editorContext);
    provider.setRole("name");
    provider.setNoTargetText("<no name>");
    EditorCell editorCell;
    editorCell = provider.createEditorCell(editorContext);
    editorCell.setCellId("property_name");
    editorCell.setSubstituteInfo(provider.createDefaultSubstituteInfo());
    SNode attributeConcept = provider.getRoleAttribute();
    Class attributeKind = provider.getRoleAttributeClass();
    if (attributeConcept != null) {
      IOperationContext opContext = editorContext.getOperationContext();
      EditorManager manager = EditorManager.getInstanceFromContext(opContext);
      return manager.createRoleAttributeCell(editorContext, attributeConcept, attributeKind, editorCell);
    } else
    return editorCell;
  }

  private EditorCell createProperty_2bp9y3_b2a(EditorContext editorContext, SNode node) {
    CellProviderWithRole provider = new PropertyCellProvider(node, editorContext);
    provider.setRole("statementDel");
    provider.setNoTargetText("<no statementDel>");
    EditorCell editorCell;
    editorCell = provider.createEditorCell(editorContext);
    editorCell.setCellId("property_statementDel");
    editorCell.setSubstituteInfo(provider.createDefaultSubstituteInfo());
    SNode attributeConcept = provider.getRoleAttribute();
    Class attributeKind = provider.getRoleAttributeClass();
    if (attributeConcept != null) {
      IOperationContext opContext = editorContext.getOperationContext();
      EditorManager manager = EditorManager.getInstanceFromContext(opContext);
      return manager.createRoleAttributeCell(editorContext, attributeConcept, attributeKind, editorCell);
    } else
    return editorCell;
  }

  private EditorCell createProperty_2bp9y3_b3a(EditorContext editorContext, SNode node) {
    CellProviderWithRole provider = new PropertyCellProvider(node, editorContext);
    provider.setRole("blockOpener");
    provider.setNoTargetText("<no blockOpener>");
    EditorCell editorCell;
    editorCell = provider.createEditorCell(editorContext);
    editorCell.setCellId("property_blockOpener");
    editorCell.setSubstituteInfo(provider.createDefaultSubstituteInfo());
    SNode attributeConcept = provider.getRoleAttribute();
    Class attributeKind = provider.getRoleAttributeClass();
    if (attributeConcept != null) {
      IOperationContext opContext = editorContext.getOperationContext();
      EditorManager manager = EditorManager.getInstanceFromContext(opContext);
      return manager.createRoleAttributeCell(editorContext, attributeConcept, attributeKind, editorCell);
    } else
    return editorCell;
  }

  private EditorCell createProperty_2bp9y3_b4a(EditorContext editorContext, SNode node) {
    CellProviderWithRole provider = new PropertyCellProvider(node, editorContext);
    provider.setRole("blockCloser");
    provider.setNoTargetText("<no blockCloser>");
    EditorCell editorCell;
    editorCell = provider.createEditorCell(editorContext);
    editorCell.setCellId("property_blockCloser");
    editorCell.setSubstituteInfo(provider.createDefaultSubstituteInfo());
    SNode attributeConcept = provider.getRoleAttribute();
    Class attributeKind = provider.getRoleAttributeClass();
    if (attributeConcept != null) {
      IOperationContext opContext = editorContext.getOperationContext();
      EditorManager manager = EditorManager.getInstanceFromContext(opContext);
      return manager.createRoleAttributeCell(editorContext, attributeConcept, attributeKind, editorCell);
    } else
    return editorCell;
  }

  private EditorCell createProperty_2bp9y3_b5a(EditorContext editorContext, SNode node) {
    CellProviderWithRole provider = new PropertyCellProvider(node, editorContext);
    provider.setRole("exprOpener");
    provider.setNoTargetText("<no exprOpener>");
    EditorCell editorCell;
    editorCell = provider.createEditorCell(editorContext);
    editorCell.setCellId("property_exprOpener");
    editorCell.setSubstituteInfo(provider.createDefaultSubstituteInfo());
    SNode attributeConcept = provider.getRoleAttribute();
    Class attributeKind = provider.getRoleAttributeClass();
    if (attributeConcept != null) {
      IOperationContext opContext = editorContext.getOperationContext();
      EditorManager manager = EditorManager.getInstanceFromContext(opContext);
      return manager.createRoleAttributeCell(editorContext, attributeConcept, attributeKind, editorCell);
    } else
    return editorCell;
  }

  private EditorCell createProperty_2bp9y3_b6a(EditorContext editorContext, SNode node) {
    CellProviderWithRole provider = new PropertyCellProvider(node, editorContext);
    provider.setRole("exprCloser");
    provider.setNoTargetText("<no exprCloser>");
    EditorCell editorCell;
    editorCell = provider.createEditorCell(editorContext);
    editorCell.setCellId("property_exprCloser");
    editorCell.setSubstituteInfo(provider.createDefaultSubstituteInfo());
    SNode attributeConcept = provider.getRoleAttribute();
    Class attributeKind = provider.getRoleAttributeClass();
    if (attributeConcept != null) {
      IOperationContext opContext = editorContext.getOperationContext();
      EditorManager manager = EditorManager.getInstanceFromContext(opContext);
      return manager.createRoleAttributeCell(editorContext, attributeConcept, attributeKind, editorCell);
    } else
    return editorCell;
  }
}
