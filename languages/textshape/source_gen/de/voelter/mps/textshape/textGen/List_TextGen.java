package de.voelter.mps.textshape.textGen;

/*Generated by MPS */

import jetbrains.mps.textGen.SNodeTextGen;
import jetbrains.mps.smodel.SNode;
import jetbrains.mps.lang.smodel.generator.smodelAdapter.SPropertyOperations;
import jetbrains.mps.lang.smodel.generator.smodelAdapter.SLinkOperations;
import jetbrains.mps.textGen.TextGenManager;

public class List_TextGen extends SNodeTextGen {
  public void doGenerateText(SNode node) {
    if (SPropertyOperations.getString(node, "opener") != null) {
      this.append(SPropertyOperations.getString(node, "opener"));
    }
    int i = 0;
    for (SNode e : SLinkOperations.getTargets(node, "elements", true)) {
      if (i > 0 && SPropertyOperations.getString(node, "delimiter") != null) {
        this.append(SPropertyOperations.getString(node, "delimiter"));
      }
      i++;
      TextGenManager.instance().appendNodeText(this.getContext(), this.getBuffer(), e, this.getSNode());
    }
    if (SPropertyOperations.getString(node, "closer") != null) {
      this.append(SPropertyOperations.getString(node, "closer"));
    }
  }
}
