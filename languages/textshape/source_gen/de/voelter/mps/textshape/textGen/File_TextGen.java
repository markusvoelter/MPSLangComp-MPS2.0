package de.voelter.mps.textshape.textGen;

/*Generated by MPS */

import jetbrains.mps.textGen.SNodeTextGen;
import jetbrains.mps.smodel.SNode;
import jetbrains.mps.internal.collections.runtime.ListSequence;
import jetbrains.mps.lang.smodel.generator.smodelAdapter.SLinkOperations;
import de.voelter.mps.textshape.behavior.IFileContent_Behavior;
import jetbrains.mps.textGen.TextGenManager;
import jetbrains.mps.lang.smodel.generator.smodelAdapter.SNodeOperations;
import jetbrains.mps.lang.smodel.generator.smodelAdapter.SPropertyOperations;

public class File_TextGen extends SNodeTextGen {
  public void doGenerateText(SNode node) {
    for (SNode c : ListSequence.fromList(SLinkOperations.getTargets(node, "contents", true))) {
      if (IFileContent_Behavior.call_needsBlankLine_5815279313395613799(c)) {
        this.appendNewLine();
      }
      TextGenManager.instance().appendNodeText(this.getContext(), this.getBuffer(), c, this.getSNode());
      if (SNodeOperations.isInstanceOf(c, "de.voelter.mps.textshape.structure.IStatement")) {
        this.append(SPropertyOperations.getString(SLinkOperations.getTarget(node, "config", false), "statementDel"));
      }
      this.appendNewLine();
    }
  }

  public String getExtension(SNode node) {
    return SPropertyOperations.getString(node, "ext");
  }
}
