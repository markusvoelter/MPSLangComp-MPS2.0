package de.voelter.mps.textshape.textGen;

/*Generated by MPS */

import jetbrains.mps.textGen.SNodeTextGen;
import jetbrains.mps.smodel.SNode;
import jetbrains.mps.internal.collections.runtime.ListSequence;
import jetbrains.mps.lang.smodel.generator.smodelAdapter.SLinkOperations;
import jetbrains.mps.lang.smodel.generator.smodelAdapter.SNodeOperations;
import jetbrains.mps.lang.smodel.generator.smodelAdapter.SPropertyOperations;
import jetbrains.mps.textGen.TextGenManager;

public class MultiTextToken_TextGen extends SNodeTextGen {
  public void doGenerateText(SNode node) {
    for (SNode t : ListSequence.fromList(SLinkOperations.getTargets(node, "tokens", true))) {
      if (SNodeOperations.getIndexInParent(t) > 0 && !(SPropertyOperations.getBoolean(node, "noBlanks"))) {
        this.append(" ");
      }
      TextGenManager.instance().appendNodeText(this.getContext(), this.getBuffer(), t, this.getSNode());
    }
  }
}
