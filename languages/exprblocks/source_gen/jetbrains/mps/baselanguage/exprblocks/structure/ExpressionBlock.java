package jetbrains.mps.baselanguage.exprblocks.structure;

/*Generated by MPS */

import jetbrains.mps.baseLanguage.structure.Expression;
import jetbrains.mps.smodel.SNode;
import jetbrains.mps.baseLanguage.structure.StatementList;
import jetbrains.mps.smodel.SModel;
import jetbrains.mps.smodel.SModelUtil_new;
import jetbrains.mps.project.GlobalScope;

public class ExpressionBlock extends Expression {
  public static final String concept = "jetbrains.mps.baselanguage.exprblocks.structure.ExpressionBlock";
  public static final String RESULT = "result";
  public static final String BODY = "body";

  public ExpressionBlock(SNode node) {
    super(node);
  }

  public Expression getResult() {
    return (Expression) this.getChild(Expression.class, ExpressionBlock.RESULT);
  }

  public void setResult(Expression node) {
    super.setChild(ExpressionBlock.RESULT, node);
  }

  public StatementList getBody() {
    return (StatementList) this.getChild(StatementList.class, ExpressionBlock.BODY);
  }

  public void setBody(StatementList node) {
    super.setChild(ExpressionBlock.BODY, node);
  }

  public static ExpressionBlock newInstance(SModel sm, boolean init) {
    return (ExpressionBlock) SModelUtil_new.instantiateConceptDeclaration("jetbrains.mps.baselanguage.exprblocks.structure.ExpressionBlock", sm, GlobalScope.getInstance(), init).getAdapter();
  }

  public static ExpressionBlock newInstance(SModel sm) {
    return ExpressionBlock.newInstance(sm, false);
  }
}
