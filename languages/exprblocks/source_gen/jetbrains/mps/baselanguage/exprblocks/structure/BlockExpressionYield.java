package jetbrains.mps.baselanguage.exprblocks.structure;

/*Generated by MPS */

import jetbrains.mps.baseLanguage.structure.Statement;
import jetbrains.mps.smodel.SNode;
import jetbrains.mps.baseLanguage.structure.Expression;
import jetbrains.mps.smodel.SModel;
import jetbrains.mps.smodel.SModelUtil_new;
import jetbrains.mps.project.GlobalScope;

public class BlockExpressionYield extends Statement {
  public static final String concept = "jetbrains.mps.baselanguage.exprblocks.structure.BlockExpressionYield";
  public static final String RESULT = "result";

  public BlockExpressionYield(SNode node) {
    super(node);
  }

  public Expression getResult() {
    return (Expression) this.getChild(Expression.class, BlockExpressionYield.RESULT);
  }

  public void setResult(Expression node) {
    super.setChild(BlockExpressionYield.RESULT, node);
  }

  public static BlockExpressionYield newInstance(SModel sm, boolean init) {
    return (BlockExpressionYield) SModelUtil_new.instantiateConceptDeclaration("jetbrains.mps.baselanguage.exprblocks.structure.BlockExpressionYield", sm, GlobalScope.getInstance(), init).getAdapter();
  }

  public static BlockExpressionYield newInstance(SModel sm) {
    return BlockExpressionYield.newInstance(sm, false);
  }
}
