package rbac.structure;

/*Generated by MPS */

import java.util.List;
import jetbrains.mps.internal.collections.runtime.ListSequence;
import jetbrains.mps.internal.collections.runtime.backports.LinkedList;

public enum Right {
  NOTHING("NOTHING", null),
  R("R", "R"),
  W("W", "W"),
  E("E", "E"),
  D("D", "D");

  private String myName;
  private String myValue;

  Right(String name, String value) {
    this.myName = name;
    this.myValue = value;
  }

  public String getName() {
    return this.myName;
  }

  public String getValueAsString() {
    return this.myValue;
  }

  public String getValue() {
    return this.myValue;
  }

  public static List<Right> getConstants() {
    List<Right> list = ListSequence.fromList(new LinkedList<Right>());
    ListSequence.fromList(list).addElement(Right.NOTHING);
    ListSequence.fromList(list).addElement(Right.R);
    ListSequence.fromList(list).addElement(Right.W);
    ListSequence.fromList(list).addElement(Right.E);
    ListSequence.fromList(list).addElement(Right.D);
    return list;
  }

  public static Right getDefault() {
    return Right.NOTHING;
  }

  public static Right parseValue(String value) {
    if (value == null) {
      return Right.getDefault();
    }
    if (value.equals(Right.NOTHING.getValueAsString())) {
      return Right.NOTHING;
    }
    if (value.equals(Right.R.getValueAsString())) {
      return Right.R;
    }
    if (value.equals(Right.W.getValueAsString())) {
      return Right.W;
    }
    if (value.equals(Right.E.getValueAsString())) {
      return Right.E;
    }
    if (value.equals(Right.D.getValueAsString())) {
      return Right.D;
    }
    return Right.getDefault();
  }
}
