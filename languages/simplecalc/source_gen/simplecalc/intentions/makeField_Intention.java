package simplecalc.intentions;

/*Generated by MPS */

import jetbrains.mps.intentions.BaseIntention;
import jetbrains.mps.intentions.Intention;
import jetbrains.mps.smodel.SNode;
import jetbrains.mps.nodeEditor.EditorContext;
import jetbrains.mps.nodeEditor.cells.EditorCell;
import jetbrains.mps.nodeEditor.cells.EditorCell_Error;
import jetbrains.mps.nodeEditor.cells.EditorCell_Constant;
import jetbrains.mps.smodel.ModelAccess;
import jetbrains.mps.lang.smodel.generator.smodelAdapter.SConceptOperations;
import jetbrains.mps.lang.smodel.generator.smodelAdapter.SLinkOperations;
import jetbrains.mps.lang.smodel.generator.smodelAdapter.SPropertyOperations;
import jetbrains.mps.internal.collections.runtime.ListSequence;
import jetbrains.mps.lang.smodel.generator.smodelAdapter.SNodeOperations;

public class makeField_Intention extends BaseIntention implements Intention {
  public makeField_Intention() {
  }

  public String getConcept() {
    return "simplecalc.structure.Calculation";
  }

  public boolean isParameterized() {
    return false;
  }

  public boolean isErrorIntention() {
    return false;
  }

  public boolean isAvailableInChildNodes() {
    return true;
  }

  public String getDescription(final SNode node, final EditorContext editorContext) {
    return "create it";
  }

  public boolean isApplicable(final SNode node, final EditorContext editorContext) {
    if (!(this.isApplicableToNode(node, editorContext))) {
      return false;
    }
    return true;
  }

  public boolean isApplicableToNode(final SNode node, final EditorContext editorContext) {
    EditorCell c = editorContext.getSelectedCell();
    if (c instanceof EditorCell_Error) {
      return true;
    }
    if (c instanceof EditorCell_Constant) {
      return true;
    }
    return false;
  }

  public void execute(final SNode node, final EditorContext editorContext) {
    final EditorCell c = editorContext.getSelectedCell();
    if (c instanceof EditorCell_Error) {
      ModelAccess.instance().runWriteAction(new Runnable() {
        public void run() {
          String t = ((EditorCell_Error) c).getText();
          SNode a = SConceptOperations.createNewNode("simplecalc.structure.VarDecl", null);
          SLinkOperations.setTarget(a, "type", SConceptOperations.createNewNode("de.voelter.mps.expressions.structure.IntType", null), true);
          SPropertyOperations.set(a, "name", t);
          ListSequence.fromList(SLinkOperations.getTargets(SNodeOperations.getAncestor(node, "de.voelter.mps.naming.structure.Namespace", true, false), "contents", true)).addElement(a);
        }
      });
    }
    if (c instanceof EditorCell_Constant) {
      ModelAccess.instance().runWriteAction(new Runnable() {
        public void run() {
          String t = ((EditorCell_Constant) c).getText();
          SNode a = SConceptOperations.createNewNode("simplecalc.structure.VarDecl", null);
          SLinkOperations.setTarget(a, "type", SConceptOperations.createNewNode("de.voelter.mps.expressions.structure.IntType", null), true);
          SPropertyOperations.set(a, "name", t);
          ListSequence.fromList(SLinkOperations.getTargets(SNodeOperations.getAncestor(node, "de.voelter.mps.naming.structure.Namespace", true, false), "contents", true)).addElement(a);
        }
      });
    }
  }

  public String getLocationString() {
    return "simplecalc.intentions";
  }
}
