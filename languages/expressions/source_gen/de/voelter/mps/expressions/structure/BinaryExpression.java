package de.voelter.mps.expressions.structure;

/*Generated by MPS */

import jetbrains.mps.smodel.SNode;
import jetbrains.mps.smodel.SModel;
import jetbrains.mps.smodel.SModelUtil_new;
import jetbrains.mps.project.GlobalScope;

public class BinaryExpression extends Expression {
  public static final String concept = "de.voelter.mps.expressions.structure.BinaryExpression";
  public static final String LEFT = "left";
  public static final String RIGHT = "right";

  public BinaryExpression(SNode node) {
    super(node);
  }

  public Expression getLeft() {
    return (Expression) this.getChild(Expression.class, BinaryExpression.LEFT);
  }

  public void setLeft(Expression node) {
    super.setChild(BinaryExpression.LEFT, node);
  }

  public Expression getRight() {
    return (Expression) this.getChild(Expression.class, BinaryExpression.RIGHT);
  }

  public void setRight(Expression node) {
    super.setChild(BinaryExpression.RIGHT, node);
  }

  public static BinaryExpression newInstance(SModel sm, boolean init) {
    return (BinaryExpression) SModelUtil_new.instantiateConceptDeclaration("de.voelter.mps.expressions.structure.BinaryExpression", sm, GlobalScope.getInstance(), init).getAdapter();
  }

  public static BinaryExpression newInstance(SModel sm) {
    return BinaryExpression.newInstance(sm, false);
  }
}
