package de.voelter.mps.naming.structure;

/*Generated by MPS */

import jetbrains.mps.smodel.runtime.ConceptDescriptor;
import java.util.Arrays;
import jetbrains.mps.smodel.runtime.impl.CompiledConceptDescriptor;
import jetbrains.mps.smodel.runtime.interpreted.StructureAspectInterpreted;

public class StructureAspectDescriptor implements jetbrains.mps.smodel.runtime.StructureAspectDescriptor {
  private static String[] stringSwitchCases_1htk8d_a0a0a = new String[]{"de.voelter.mps.naming.structure.INamespace", "de.voelter.mps.naming.structure.INamespaceContent", "de.voelter.mps.naming.structure.IQualifiedNamedConcept", "de.voelter.mps.naming.structure.Namespace", "de.voelter.mps.naming.structure.NamespaceImport", "de.voelter.mps.naming.structure.UniqueNamesConstraint"};

  public StructureAspectDescriptor() {
  }

  public ConceptDescriptor getDescriptor(String conceptFqName) {
    switch (Arrays.binarySearch(stringSwitchCases_1htk8d_a0a0a, conceptFqName)) {
      case 0:
        return new CompiledConceptDescriptor("de.voelter.mps.naming.structure.INamespace", null, true, new String[]{"de.voelter.mps.naming.structure.INamespaceContent"}, new String[]{}, new String[]{});
      case 1:
        return new CompiledConceptDescriptor("de.voelter.mps.naming.structure.INamespaceContent", null, true, new String[]{"de.voelter.mps.naming.structure.IQualifiedNamedConcept"}, new String[]{}, new String[]{});
      case 2:
        return new CompiledConceptDescriptor("de.voelter.mps.naming.structure.IQualifiedNamedConcept", null, true, new String[]{"jetbrains.mps.lang.core.structure.INamedConcept"}, new String[]{}, new String[]{});
      case 3:
        return new CompiledConceptDescriptor("de.voelter.mps.naming.structure.Namespace", "jetbrains.mps.lang.core.structure.BaseConcept", false, new String[]{"jetbrains.mps.lang.core.structure.BaseConcept", "de.voelter.mps.naming.structure.INamespaceContent", "de.voelter.mps.naming.structure.INamespace"}, new String[]{}, new String[]{});
      case 4:
        return new CompiledConceptDescriptor("de.voelter.mps.naming.structure.NamespaceImport", "jetbrains.mps.lang.core.structure.BaseConcept", false, new String[]{"jetbrains.mps.lang.core.structure.BaseConcept"}, new String[]{}, new String[]{"namespace"});
      case 5:
        return new CompiledConceptDescriptor("de.voelter.mps.naming.structure.UniqueNamesConstraint", "jetbrains.mps.lang.core.structure.BaseConcept", false, new String[]{"jetbrains.mps.lang.core.structure.BaseConcept"}, new String[]{}, new String[]{});
      default:
        return StructureAspectInterpreted.getInstance().getDescriptor(conceptFqName);
    }
  }
}
