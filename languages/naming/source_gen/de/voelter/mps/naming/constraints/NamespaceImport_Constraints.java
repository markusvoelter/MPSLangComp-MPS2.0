package de.voelter.mps.naming.constraints;

/*Generated by MPS */

import jetbrains.mps.smodel.runtime.base.BaseConstraintsDescriptor;
import java.util.Map;
import jetbrains.mps.smodel.runtime.ReferenceConstraintsDescriptor;
import java.util.HashMap;
import jetbrains.mps.smodel.runtime.base.BaseReferenceConstraintsDescriptor;
import org.jetbrains.annotations.Nullable;
import jetbrains.mps.smodel.runtime.ReferenceScopeProvider;
import jetbrains.mps.smodel.runtime.base.BaseReferenceScopeProvider;
import jetbrains.mps.smodel.IOperationContext;
import jetbrains.mps.smodel.runtime.ReferencePresentationContext;
import de.voelter.mps.naming.behavior.IQualifiedNamedConcept_Behavior;

public class NamespaceImport_Constraints extends BaseConstraintsDescriptor {
  public NamespaceImport_Constraints() {
    super("de.voelter.mps.naming.structure.NamespaceImport");
  }

  @Override
  protected Map<String, ReferenceConstraintsDescriptor> getNotDefaultReferences() {
    Map<String, ReferenceConstraintsDescriptor> references = new HashMap();
    references.put("namespace", new BaseReferenceConstraintsDescriptor("namespace", this) {
      @Nullable
      @Override
      public ReferenceScopeProvider getScopeProvider() {
        return new BaseReferenceScopeProvider() {
          @Override
          public boolean hasPresentation() {
            return true;
          }

          @Override
          public String getPresentation(final IOperationContext operationContext, final ReferencePresentationContext _context) {
            return IQualifiedNamedConcept_Behavior.call_qualifiedName_5019556274771758840(_context.getParameterNode());
          }
        };
      }
    });
    return references;
  }
}
